{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack5/./node_modules/uuid/dist/esm-browser/native.js","webpack://webpack5/./node_modules/uuid/dist/esm-browser/rng.js","webpack://webpack5/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://webpack5/./node_modules/uuid/dist/esm-browser/v4.js","webpack://webpack5/./src/js/Modal.js","webpack://webpack5/./src/js/utils.js","webpack://webpack5/./src/js/Helpdesk.js","webpack://webpack5/./src/js/app.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export default class Modal {\n  constructor(parent, method) {\n    this.parentElement = document.querySelector(parent);\n    this.method = method;\n  }\n\n  init() {\n    this.modal = document.createElement('div');\n    this.modal.classList.add('modal');\n\n    const addButton = document.querySelector('.header__button');\n\n    addButton.addEventListener('click', () => {\n      this.modal.classList.add('visible');\n    });\n\n    if (this.method === 'delete') {\n      this.modal.classList.add('delete-task');\n    }\n\n    let titleTicket;\n\n    switch (this.method) {\n      case 'add':\n        titleTicket = 'Добавить';\n        break;\n\n      case 'edit':\n        titleTicket = 'Изменить';\n        break;\n\n      case 'delete':\n        titleTicket = 'Удалить';\n        break;\n\n      default:\n        break;\n    }\n\n    this.modal.innerHTML = `\n      <form class=\"modal-form visible\" name=\"taskmanager-form\">\n        <div class=\"modal-form__header\">\n          <p>${titleTicket} тикет</p>\n        </div>\n        <label class=\"modal__description_short\">Краткое описание\n          <input class=\"edit-input\" name=\"short-description\" type=\"text\" />\n        </label>\n        <label class=\"modal__description_full\">Подробное описание\n          <input class=\"edit-input full\" name=\"long-description\"></input>\n        </label>\n        <p class=\"modal__awarening\">Вы уверены, что хотите удалить тикет? Это действие необратимо</p>\n        <div class=\"modal-form__button-container\">\n          <button class=\"button cancel-button\">Отмена</button>\n          <button class=\"button submit-button\">OK</button>\n        </div>\n      </form>\n        `;\n\n    this.parentElement.appendChild(this.modal);\n    this.addEvents();\n    return this.modal;\n  }\n\n  addEvents() {\n    this.modal.addEventListener('click', (e) => {\n      e.preventDefault();\n\n      if (\n        e.target.classList.contains('modal')\n        || e.target.closest('.cancel-button')\n      ) {\n        this.modal.remove();\n      }\n    });\n\n    this.modal.addEventListener('submit', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  remove() {\n    this.modal.remove();\n  }\n}\n","async function sendToServer(methodToSend, bodyObject) {\n  let bodyToSend;\n  let method;\n  let postFix;\n\n  switch (methodToSend) {\n    case 'get':\n      method = 'GET';\n      postFix = 'allTickets';\n      break;\n    case 'getId':\n      method = 'GET';\n      postFix = `ticketById&id=${bodyObject.id}`;\n      break;\n    case 'edit':\n      method = 'POST';\n      postFix = `editTicket&id=${bodyObject.id}`;\n      break;\n    case 'delete':\n      method = 'POST';\n      postFix = `deleteTicket&id=${bodyObject.id}`;\n      break;\n    case 'add':\n      method = 'POST';\n      postFix = 'createTicket';\n      break;\n    case 'check':\n      method = 'POST';\n      postFix = `checkTicket&id=${bodyObject.id}`;\n      break;\n    default:\n      break;\n  }\n\n  if (method === 'POST' && methodToSend !== 'delete') {\n    bodyToSend = JSON.stringify(bodyObject);\n  } else {\n    bodyToSend = null;\n  }\n\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  try {\n    const response = await fetch(`http://localhost:7070?method=${postFix}`, {\n      method,\n      body: bodyToSend,\n      headers,\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport default sendToServer;\n","import { v4 as uuidv4 } from 'uuid';\nimport Modal from './Modal';\nimport sendToServer from './utils';\n\nexport default class Helpdesk {\n  constructor(parent, addButton) {\n    this.parentElement = document.querySelector(parent);\n    this.addButtonElement = document.querySelector(addButton);\n\n    this.tickets = [];\n  }\n\n  async init() {\n    try {\n      this.tickets = await sendToServer('get', null);\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (this.tickets.length !== 0) {\n      this.renderTaskList();\n    }\n\n    this.addEvents();\n  }\n\n  renderTaskList() {\n    if (!this.taskList) {\n      this.taskList = document.createElement('ul');\n      this.taskList.classList.add('tickets-list');\n      this.parentElement.appendChild(this.taskList);\n    }\n    this.taskList.innerHTML = '';\n    this.modal = null;\n    this.tickets.forEach((ticket) => this.taskList.appendChild(this.createTaskItem(ticket)));\n  }\n\n  createTaskItem({\n    id, status, title, created,\n  }) {\n    const taskItem = document.createElement('li');\n    taskItem.classList.add('tickets-list__item');\n    taskItem.dataset.id = `${id}`;\n\n    taskItem.innerHTML = `\n      <div class=\"item-visible\">\n        <div class=\"item-visible left\">\n\t\t\t\t\t<label class=\"ticket-button ticket-status\">\n\t\t\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t\t</label>\n          <p class=\"ticket-content\">${title}</p>\n        </div>\n        <div class=\"item-visible right\">\n          <p class=\"ticket-date\">${created}</p>\n            <div class=\"ticket-actions\">\n              <button class=\"ticket-button edit-button\"></button>\n              <button class=\"ticket-button delete-button\"></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"item__description\">\n          <p class=\"item__description-content\">Описание</p>\n        </div>\n      `;\n\n    const taskItemCheck = taskItem.querySelector('.ticket-status input');\n    taskItemCheck.addEventListener('click', (event) => {\n      event.target.checked = status;\n    });\n\n    this.addEventForTaskItem(taskItem);\n\n    return taskItem;\n  }\n\n  collectFullData({ textData, id, status = false }, eventElement = false) {\n    const data = {};\n    data.id = id || uuidv4();\n\n    if (textData) {\n      data.title = textData.title;\n      data.description = textData.description;\n    }\n\n    const getNewDate = () => {\n      const date = new Date();\n      const yearShort = date.getFullYear().toString().slice(2, 4);\n      const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n      const fullDate = `${date.getDate()}.${month}.${yearShort}`;\n      const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n      const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n      const fullTime = `${hours}:${minutes}`;\n      const createdDate = `${fullDate} ${fullTime}`;\n\n      return createdDate;\n    };\n\n    if (this.method === 'add') {\n      data.created = getNewDate();\n    }\n\n    data.status = status;\n\n    this.chooseMethod(data, eventElement);\n  }\n\n  async chooseMethod(data, eventElement) {\n    if (this.method === 'add') {\n      try {\n        await sendToServer(\n          'add',\n          data,\n          this.modal.querySelector('.modal-form'),\n        );\n\n        this.tickets.push(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.modal.remove();\n        this.renderTaskList();\n      }\n\n      return;\n    }\n\n    if (this.method === 'delete') {\n      try {\n        const deletedIndex = await sendToServer(\n          'delete',\n          data,\n          this.modal.querySelector('.modal-form'),\n        );\n        this.tickets.splice(deletedIndex, 1);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.modal.remove();\n        this.renderTaskList();\n      }\n\n      return;\n    }\n\n    if (this.method === 'edit') {\n      try {\n        const editedIndex = await sendToServer(\n          'edit',\n          data,\n          this.modal.querySelector('.modal-form'),\n        );\n\n        this.tickets[editedIndex].title = data.title;\n        this.tickets[editedIndex].description = data.description;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.modal.remove();\n        this.renderTaskList();\n      }\n\n      return;\n    }\n\n    if (this.method === 'check') {\n      try {\n        await sendToServer(\n          'check',\n          data,\n          eventElement.closest('.tickets-list__item'),\n        );\n        eventElement.classList.toggle('active');\n      } catch (error) {\n        console.error(error);\n      }\n\n      return;\n    }\n\n    if (this.method === 'getId') {\n      let getDescription;\n      try {\n        if (\n          (eventElement && !eventElement.classList.contains('visible'))\n          || this.modal\n        ) {\n          getDescription = await sendToServer('getId', data);\n        }\n\n        if (!this.modal) {\n          eventElement.querySelector('.item__description-content').textContent = getDescription;\n          return;\n        }\n\n        this.modal.querySelector('.modal__description_full input').value = getDescription;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        if (!this.modal) {\n          eventElement.classList.toggle('visible');\n        }\n      }\n    }\n  }\n\n  collectTextData() {\n    const inputs = [...this.modal.querySelectorAll('input')];\n\n    for (const input of inputs) {\n      if (input.value === '') {\n        return false;\n      }\n    }\n    const title = this.modal.querySelector(\n      '.modal__description_short input',\n    ).value;\n    const description = this.modal.querySelector(\n      '.modal__description_full input',\n    ).value;\n\n    return { title, description };\n  }\n\n  addEventForTaskItem(item) {\n    item.addEventListener('click', async (e) => {\n      // if (e.target.closest('label')) {\n      //   e.target.preventDefault();\n      // }\n\n      // e.preventDefault();\n\n      if (this.modal) {\n        this.modal = null;\n      }\n\n      if (e.target.closest('.edit-button')) {\n        if (!this.modal) {\n          this.modal = new Modal('body', 'edit').init();\n\n          const ticketTitle = item.querySelector('.ticket-content').textContent;\n\n          this.modal.querySelector('.modal__description_short input').value = ticketTitle;\n\n          this.method = 'getId';\n\n          this.collectFullData({ id: item.dataset.id });\n\n          this.method = 'edit';\n\n          this.createModal(item.dataset.id);\n        }\n      } else if (e.target.closest('.delete-button')) {\n        if (!this.modal) {\n          this.modal = new Modal('body', 'delete').init();\n\n          this.method = 'delete';\n\n          this.createModal(item.dataset.id);\n        }\n      } else {\n        this.method = 'getId';\n\n        this.collectFullData(\n          { id: item.dataset.id },\n          item.querySelector('.item__description'),\n        );\n      }\n    });\n\n    item\n      .querySelector('.ticket-status input')\n      .addEventListener('change', (e) => {\n        this.method = 'check';\n\n        this.collectFullData(\n          { id: item.dataset.id, status: true },\n          e.target.closest('.ticket-status'),\n        );\n      });\n  }\n\n  createModal(id = undefined) {\n    if (this.modal) {\n      this.modal.addEventListener('click', (e) => {\n        if (e.target.closest('.submit-button')) {\n          const textData = this.collectTextData();\n\n          if (!textData && this.method !== 'delete') {\n            return;\n          }\n\n          this.collectFullData({ textData, id });\n        }\n      });\n    }\n  }\n\n  addEvents() {\n    document.querySelector('.header__button').addEventListener('click', (e) => {\n      e.preventDefault();\n      this.modal = new Modal('body', 'add').init();\n      this.method = 'add';\n      this.createModal();\n    });\n  }\n}\n","import Helpdesk from './Helpdesk';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const mainTaskMansger = new Helpdesk('.helpdesk', 'tickets__container');\n\n  mainTaskMansger.init();\n});\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","Modal","constructor","parent","method","this","parentElement","document","querySelector","init","titleTicket","modal","createElement","classList","add","addEventListener","innerHTML","appendChild","addEvents","e","preventDefault","target","contains","closest","remove","async","methodToSend","bodyObject","bodyToSend","postFix","id","JSON","stringify","headers","response","fetch","body","json","error","Helpdesk","addButton","addButtonElement","tickets","sendToServer","console","length","renderTaskList","taskList","forEach","ticket","createTaskItem","_ref","status","title","created","taskItem","dataset","event","checked","addEventForTaskItem","collectFullData","_ref2","textData","eventElement","arguments","undefined","data","uuidv4","description","getNewDate","date","Date","yearShort","getFullYear","month","getMonth","getDate","getHours","getMinutes","chooseMethod","getDescription","textContent","value","toggle","editedIndex","deletedIndex","splice","collectTextData","inputs","querySelectorAll","input","item","ticketTitle","createModal"],"sourceRoot":""}